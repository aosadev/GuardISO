name: Symfony

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: symfony_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v4

    # Configuración de PHP
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'
        extensions: mbstring, intl, pdo_mysql

    # Copiar archivo de entorno de prueba
    - name: Copy .env.test.local
      run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"

    # Mostrar versión de Composer y PHP
    - name: Check PHP and Composer version
      run: |
        php -v
        composer -V

    # Cachear paquetes de Composer
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    # Instalar dependencias
    - name: Install Dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    # Mostrar dependencias instaladas
    - name: Show Installed Dependencies
      run: composer show

    # Crear base de datos
    - name: Create Database
      run: php bin/console doctrine:database:create --if-not-exists

    # Ejecutar migraciones
    - name: Run Migrations
      run: php bin/console doctrine:migrations:migrate --no-interaction

    # Ejecutar pruebas con PHPUnit
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DATABASE_URL: mysql://root:root@127.0.0.1:3306/symfony_test
      run: vendor/bin/phpunit
